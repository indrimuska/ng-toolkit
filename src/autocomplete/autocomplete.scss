@import '../variables.scss';
@import '../select/select-utility.scss';
@import './autocomplete-utility.scss';

$ngt-autocomplete-icon-color:           $ngt-select-icon-color;
$ngt-autocomplete-background-url:       "data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' " +
                                        "viewBox='0 0 4 2.8284271'%3E%3Cpath fill='#{$ngt-autocomplete-icon-color}' " +
                                        "d='M 2,2.8284271 0,0 4,0 z'/%3E%3C/svg%3E";
$ngt-autocomplete-background:           $ngt-input-background
                                        url("#{$ngt-autocomplete-background-url}") no-repeat right $ngt-select-icon-position-right center;

$ngt-autocomplete-item-spacing:         0.25rem;

$ngt-autocomplete-option-highlight:     #f8f9fa;

:host {
    display: block;
    position: relative;
}

label {
    @include ngt-input-base;
    
    padding-right: $ngt-select-padding-right;
    margin: 0;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    overflow: hidden;
    background: $ngt-autocomplete-background;
    background-size: 9px;

    :host.multiple & {
        @if $ngt-use-gradients {
            padding-top: calc(#{$ngt-padding-vertical} - 1px);
            padding-left: calc(#{$ngt-padding-vertical} - 1px);
            padding-bottom: calc(#{$ngt-padding-vertical - $ngt-autocomplete-item-spacing} - 1px);
        } @else {
            padding-left: $ngt-padding-vertical;
            padding-bottom: $ngt-padding-vertical - $ngt-autocomplete-item-spacing;
        }
    }
    :host.disabled & {
        @include ngt-input-disabled;
    }
    :host.open & {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }
}

:host.multiple .ngt-autocomplete-item {
    color: #fff;
    padding: 0 0.4rem;
    border-radius: $ngt-border-radius;
    margin-right: $ngt-autocomplete-item-spacing;
    margin-bottom: $ngt-autocomplete-item-spacing;

    @if $ngt-use-gradients {
        border: 1px solid $ngt-color-primary;
        background: $ngt-color-primary-gradient;
    } @else {
        background: $ngt-color-primary;
    }

    @if $ngt-use-shadows {
        box-shadow:
            inset 0 1px 0 rgba(#fff, 0.15),
            0 1px 1px rgba(#000, 0.075);
    }

    :host.disabled & {
        opacity: 0.5;
    }
}

.ngt-autocomplete-filter {
    position: relative;
    padding: 0;
    margin: 0;
    min-height: 1.5rem;
    overflow: hidden;

    // cursor width
    padding-right: 1px;

    :host.multiple & {
        margin-left: $ngt-padding-vertical;
        
        @if $ngt-use-gradients {
            margin-top: 1px;
            margin-bottom: calc(#{$ngt-autocomplete-item-spacing} + 1px);
        } @else {
            margin-bottom: $ngt-autocomplete-item-spacing;
        }
    }

    .ngt-autocomplete-item + & {
        margin-left: 0;
    }
}

.ngt-autocomplete-filter-placeholder {
    visibility: hidden;
    white-space: pre;
}

input {
    @include ngt-typography;

    background: none;
    border: none;
    padding: 0;
    margin: 0;
    outline: none;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
}

.ngt-autocomplete-dropdown {
    @include ngt-autocomplete-dropdown;
    
    right: 0;
    width: 100%;
    margin-top: -1px;
    max-height: $ngt-autocomplete-dropdown-height;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    overflow: hidden;
    overflow-y: auto;
    
    :host.open & {
        display: block;
    }
}

.ngt-autocomplete-option {
    padding: $ngt-input-padding;
    cursor: pointer;

    &.highlighted {
        background-color: $ngt-autocomplete-option-highlight;
    }
    &:last-child {
        border-bottom-left-radius: $ngt-border-radius;
        border-bottom-right-radius: $ngt-border-radius;
    }
}